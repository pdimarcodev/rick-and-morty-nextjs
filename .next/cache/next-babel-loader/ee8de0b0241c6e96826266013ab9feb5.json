{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pablo/rick-and-morty-nextjs/pages/index.tsx\";\nimport { gql } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Head from \"next/head\";\nimport CharList from '../components/CharList';\nconst CharsQueryDocument = gql`\n  query($page: Int) {\n    characters(page: $page) {\n      info {\n        pages\n        next\n        prev\n      }\n      results {\n        id\n        name\n        image\n        type\n        gender\n        species\n      }\n    }\n  }\n`;\nconst ALL_CHARACTERS = gql`\n  query allCharacters {\n    characters {\n      results {\n        id\n        name\n      }\n    }\n  }\n`;\nexport default function Home() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ALL_CHARACTERS);\n  const characters = data === null || data === void 0 ? void 0 : data.characters.results;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Rick and Morty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this) : characters && characters.length > 0 ? /*#__PURE__*/_jsxDEV(CharList, {\n      characters: characters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No characters loaded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/pablo/rick-and-morty-nextjs/pages/index.tsx"],"names":["gql","useQuery","Head","CharList","CharsQueryDocument","ALL_CHARACTERS","Home","data","loading","error","characters","results","length"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,MAAMC,kBAAkB,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAoBA,MAAMK,cAAc,GAAGL,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAoCA,eAAe,SAASM,IAAT,GAAgB;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAAkBI,cAAlB,CAAzC;AACA,QAAMK,UAAU,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,UAAN,CAAiBC,OAApC;AAEA,sBACE;AAAA,4BACA,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,EAICH,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAEJC,KAAK,gBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,GAEHC,UAAU,IAAIA,UAAU,CAACE,MAAX,GAAoB,CAAlC,gBACJ,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD","sourcesContent":["import { gql } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport Head from \"next/head\";\nimport CharList from '../components/CharList'\nimport styles from \"../styles/Home.module.css\";\n\nconst CharsQueryDocument = gql`\n  query($page: Int) {\n    characters(page: $page) {\n      info {\n        pages\n        next\n        prev\n      }\n      results {\n        id\n        name\n        image\n        type\n        gender\n        species\n      }\n    }\n  }\n`;\n\nconst ALL_CHARACTERS = gql`\n  query allCharacters {\n    characters {\n      results {\n        id\n        name\n      }\n    }\n  }\n`;\n\ninterface Character {\n  id: string;\n  name: string;\n  image: string;\n  type: string;\n  gender: string;\n  species: string;\n}\n\ninterface CharactersQuery {\n  characters: {\n    results: Character[];\n  };\n}\n\ninterface Pages {\n  pages: number;\n  next: number;\n  prev: number;\n}\n\ninterface CharsVars {\n  page: Pages;\n}\n\nexport default function Home() {\n  const { data, loading, error } = useQuery<CharactersQuery>(ALL_CHARACTERS);\n  const characters = data?.characters.results\n\n  return (\n    <div>\n    <Head>\n      <title>Rick and Morty</title>\n    </Head>\n    {loading ? (\n      <p>Loading...</p>\n    ) : error ? (\n      <p>Error.</p>\n    ) :   characters && characters.length > 0 ? (\n      <CharList characters={characters} />\n    ) : (\n      <p>No characters loaded.</p>\n    )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}