{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/pablo/rick-and-morty-nextjs/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pablo/rick-and-morty-nextjs/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query allCharacters {\\n    characters {\\n      results {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($page: Int) {\\n    characters(page: $page) {\\n      info {\\n        pages\\n        next\\n        prev\\n      }\\n      results {\\n        id\\n        name\\n        image\\n        type\\n        gender\\n        species\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Head from \"next/head\";\nimport CharList from '../components/CharList';\nvar CharsQueryDocument = gql(_templateObject());\nvar ALL_CHARACTERS = gql(_templateObject2());\nexport default function Home() {\n  _s();\n\n  var _useQuery = useQuery(ALL_CHARACTERS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var characters = data === null || data === void 0 ? void 0 : data.characters.results;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Rick and Morty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), characters && characters.length > 0 && /*#__PURE__*/_jsxDEV(CharList, {\n      characters: characters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/pablo/rick-and-morty-nextjs/pages/index.tsx"],"names":["gql","useQuery","Head","CharList","CharsQueryDocument","ALL_CHARACTERS","Home","data","loading","error","characters","results","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,IAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;AAoBA,IAAMK,cAAc,GAAGL,GAAH,oBAApB;AAoCA,eAAe,SAASM,IAAT,GAAgB;AAAA;;AAAA,kBACIL,QAAQ,CAAkBI,cAAlB,CADZ;AAAA,MACrBE,IADqB,aACrBA,IADqB;AAAA,MACfC,OADe,aACfA,OADe;AAAA,MACNC,KADM,aACNA,KADM;;AAE7B,MAAMC,UAAU,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,UAAN,CAAiBC,OAApC;AAEA,sBACE;AAAA,4BACA,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,EAICD,UAAU,IACXA,UAAU,CAACE,MAAX,GAAoB,CADnB,iBAEC,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAfuBJ,I;UACWL,Q;;;KADXK,I","sourcesContent":["import { gql } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport Head from \"next/head\";\nimport CharList from '../components/CharList'\nimport styles from \"../styles/Home.module.css\";\n\nconst CharsQueryDocument = gql`\n  query($page: Int) {\n    characters(page: $page) {\n      info {\n        pages\n        next\n        prev\n      }\n      results {\n        id\n        name\n        image\n        type\n        gender\n        species\n      }\n    }\n  }\n`;\n\nconst ALL_CHARACTERS = gql`\n  query allCharacters {\n    characters {\n      results {\n        id\n        name\n      }\n    }\n  }\n`;\n\ninterface Character {\n  id: string;\n  name: string;\n  image: string;\n  type: string;\n  gender: string;\n  species: string;\n}\n\ninterface CharactersQuery {\n  characters: {\n    results: Character[];\n  };\n}\n\ninterface Pages {\n  pages: number;\n  next: number;\n  prev: number;\n}\n\ninterface CharsVars {\n  page: Pages;\n}\n\nexport default function Home() {\n  const { data, loading, error } = useQuery<CharactersQuery>(ALL_CHARACTERS);\n  const characters = data?.characters.results\n\n  return (\n    <div>\n    <Head>\n      <title>Rick and Morty</title>\n    </Head>\n    {characters && \n    characters.length > 0 &&\n      <CharList characters={characters} />\n    }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}