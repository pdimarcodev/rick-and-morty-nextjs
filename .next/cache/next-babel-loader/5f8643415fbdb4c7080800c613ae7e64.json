{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/pablo/rick-and-morty-nextjs/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pablo/rick-and-morty-nextjs/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Characters {\\n    characters {\\n      results {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '@apollo/client';\nimport { useQuery } from '@apollo/react-hooks';\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nvar TaskQueryDocument = gql(_templateObject());\nexport var __N_SSG = true;\nexport default function Home() {\n  _s();\n\n  var _result$data,\n      _this = this;\n\n  var result = useQuery(TaskQueryDocument);\n  var characters = (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.characters;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Rick and Morty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), characters && characters.length > 0 && characters.map(function (character) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: character.name\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, _this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/pablo/rick-and-morty-nextjs/pages/index.tsx"],"names":["gql","useQuery","Head","styles","TaskQueryDocument","Home","result","characters","data","container","length","map","character","name","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAIA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAIA,IAAMC,iBAAiB,GAAGJ,GAAH,mBAAvB;;AAeA,eAAe,SAASK,IAAT,GAAgB;AAAA;;AAAA;AAAA;;AAC7B,MAAMC,MAAM,GAAGL,QAAQ,CAAkBG,iBAAlB,CAAvB;AACA,MAAMG,UAAU,mBAAGD,MAAM,CAACE,IAAV,iDAAG,aAAaD,UAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACM,SAAvB;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGF,UAAU,IAAIA,UAAU,CAACG,MAAX,GAAoB,CAAlC,IAAuCH,UAAU,CAACI,GAAX,CAAe,UAACC,SAAD,EAAe;AACpE,0BAAO;AAAA,kBAAyBA,SAAS,CAACC;AAAnC,SAAUD,SAAS,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFuC,CAL1C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjBuBT,I;UACPJ,Q;;;KADOI,I","sourcesContent":["import { gql } from '@apollo/client';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { client } from '../apollo/client'\n\nimport Head from 'next/head'\nimport styles from '../styles/Home.module.css'\n\n\n\nconst TaskQueryDocument = gql`\n  query Characters {\n    characters {\n      results {\n        id\n        name\n      }\n    }\n  }\n`;\n\ninterface CharactersQuery {\n  characters: {id: number; name: string}[];\n}\n\nexport default function Home() {\n  const result = useQuery<CharactersQuery>(TaskQueryDocument);\n  const characters = result.data?.characters;\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Rick and Morty</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      {characters && characters.length > 0 && characters.map((character) => {\n        return <div key={character.id}>{character.name}</div>;\n      })};\n      \n    \n    </div>\n  )\n}\n\nexport const getStaticProps = async () => {\n   const apolloClient = client;\n\n   await apolloClient.query<CharactersQuery>({\n     query: TaskQueryDocument,\n   });\n\n   return { \n     props: {\n       initialApolloState: apolloClient.cache.extract(),\n     },\n   };\n};"]},"metadata":{},"sourceType":"module"}