{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pablo/rick-and-morty-nextjs/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../styles/globals.css';\nimport { ApolloProvider } from \"react-apollo\";\nimport { client } from '../apollo/client';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const apolloClient = client;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: apolloClient,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/pablo/rick-and-morty-nextjs/pages/_app.tsx"],"names":["ApolloProvider","client","MyApp","Component","pageProps","apolloClient"],"mappings":";;;;;;;;;;AAAA,OAAO,uBAAP;AACA,SAASA,cAAT,QAA+B,cAA/B;AAGA,SAAQC,MAAR,QAAqB,kBAArB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAmD;AACjD,QAAMC,YAAY,GAAGJ,MAArB;AAEA,sBACA;AAAA,2BACA,QAAC,cAAD;AAAiB,MAAA,MAAM,EAAEI,YAAzB;AAAA,6BAEA,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AAQC;;AAED,eAAeF,KAAf","sourcesContent":["import '../styles/globals.css'\nimport { ApolloProvider } from \"react-apollo\";\nimport { AppProps } from 'next/app';\n\nimport {client} from '../apollo/client'\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  const apolloClient = client;\n\n  return (\n  <>\n  <ApolloProvider  client={apolloClient}>\n  \n  <Component {...pageProps} />\n  </ApolloProvider>\n  </>\n  )\n  }\n\n  export default MyApp;\n"]},"metadata":{},"sourceType":"module"}